knitr::opts_chunk$set(echo = TRUE)
read.csv("C:\Users\Tobyz\Desktop\规划\Data Analyst\QVI_transaction_data.xlsx")
read.csv("C:/Users/Tobyz/Desktop/规划/Data Analyst/QVI_transaction_data.xlsx")
knitr::opts_chunk$set(echo = TRUE)
install.packages("readxl")  # 如果已经装过可以跳过
library(readxl)
knitr::opts_chunk$set(echo = TRUE)
#install.packages("readxl")
library(readxl)
read.csv("C:/Users/Tobyz/Desktop/规划/Data Analyst/QVI_transaction_data.xlsx")
read.csv("C:/Users/Tobyz/Desktop/规划/Data Analyst/QVI_transaction_data.xlsx")
knitr::opts_chunk$set(echo = TRUE)
#install.packages("readxl")
library(readxl)
transaction <- read_excel("C:/Users/Tobyz/Desktop/规划/Data Analyst/QVI_transaction_data.xlsx")
transaction <- read_excel("C:/Users/Tobyz/Desktop/规划/Data Analyst/QVI_transaction_data.xlsx")
customer <- read_excel("C:/Users/Tobyz/Desktop/规划/Data Analyst/QVI_purchase_behaviour.xlsx")
customer <- read.csv("C:\Users\Tobyz\Desktop\规划\Data Analyst\QVI_purchase_behaviour.csv")
customer <- read.csv("C:/Users/Tobyz/Desktop/规划/Data Analyst/QVI_purchase_behaviour.csv")
View(customer)
View(transaction)
#install.packages("readxl")
install.packages("data.table")
install.packages("ggplot2")
install.packages("ggmosaic")
install.packages("readr")
library(readxl)
library(data.table)
library(ggplot2)
library(ggmosaic)
library(readr)
knitr::opts_chunk$set(echo = TRUE)
filePath <- "C:/Users/Tobyz/Desktop/规划/Data Analyst"
transactionData <- fread(paste0(filePath,"QVI_transaction_data.csv"))
customerData <- fread(paste0(filePath,"QVI_purchase_behaviour.csv"))
filePath <- "C:/Users/Tobyz/Desktop/规划/Data Analyst"
transactionData <- fread(paste0(filePath,"QVI_transaction_data.csv"))
filePath <- "C:/Users/Tobyz/Desktop/Career/Data Analyst"
transactionData <- fread(paste0(filePath,"QVI_transaction_data.csv"))
customerData <- fread(paste0(filePath,"QVI_purchase_behaviour.csv"))
filePath <- "C:/Users/Tobyz/Desktop/Career/Data Analyst/"
transactionData <- fread(paste0(filePath,"QVI_transaction_data.csv"))
customerData <- fread(paste0(filePath,"QVI_purchase_behaviour.csv"))
filePath <- "C:/Users/Tobyz/Desktop/Career/Data Analyst/"
transactionData <- fread(file=paste0(filePath,"QVI_transaction_data.csv"))
View(transactionData)
View(transactionData)
filePath <- "C:/Users/Tobyz/Desktop/Career/Data Analyst/"
transactionData <- fread(file=paste0(filePath,"QVI_transaction_data.xlsx"))
transactionData <- fread(file=paste0(filePath,"QVI_transaction_data.xlsx"))
transactionData <- read_excel(file=paste0(filePath,"QVI_transaction_data.xlsx"))
transactionData <- read_excel(paste0(filePath,"QVI_transaction_data.xlsx"))
View(transaction)
View(transaction)
filePath <- "C:/Users/Tobyz/Desktop/Career/Data Analyst/"
transactionData <- read_excel(paste0(filePath,"QVI_transaction_data.xlsx"))
customerData <- fread(file=paste0(filePath,"QVI_purchase_behaviour.csv"))
str(transactionData)
knitr::opts_chunk$set(echo = TRUE)
#### Convert DATE column to a date format
#### A quick search online tells us that CSV and Excel integer dates begin on 30 Dec 1899
transactionData$DATE <- as.Date(transactionData$DATE, origin = "1899-12-30")
knitr::opts_chunk$set(echo = TRUE)
#### Examine PROD_NAME
summary(transactionData$PROD_NAME)
knitr::opts_chunk$set(echo = TRUE)
#### Examine PROD_NAME
factor(transactionData$PROD_NAME)
knitr::opts_chunk$set(echo = TRUE)
#### Examine the words in PROD_NAME to see if there are any incorrect entries
#### such as products that are not chips
productWords <- data.table(unlist(strsplit(unique(transactionData[, PROD_NAME]), " ")))
knitr::opts_chunk$set(echo = TRUE)
#### Examine the words in PROD_NAME to see if there are any incorrect entries
#### such as products that are not chips
productWords <- transactionData.table(unlist(strsplit(unique(transactionData[, PROD_NAME]), " ")))
knitr::opts_chunk$set(echo = TRUE)
#### Examine the words in PROD_NAME to see if there are any incorrect entries
#### such as products that are not chips
productWords <- data.table(unlist(strsplit(unique(transactionData[, PROD_NAME]), " ")))
knitr::opts_chunk$set(echo = TRUE)
filePath <- "C:/Users/Tobyz/Desktop/Career/Data Analyst/"
transactionData <- read_excel(paste0(filePath,"QVI_transaction_data.xlsx"))
#install.packages("readxl")
#install.packages("data.table")
#install.packages("ggplot2")
#install.packages("ggmosaic")
#install.packages("readr")
library(readxl)
library(data.table)
library(ggplot2)
library(ggmosaic)
library(readr)
filePath <- "C:/Users/Tobyz/Desktop/Career/Data Analyst/"
transactionData <- read_excel(paste0(filePath,"QVI_transaction_data.xlsx"))
customerData <- fread(file=paste0(filePath,"QVI_purchase_behaviour.csv"))
knitr::opts_chunk$set(echo = TRUE)
filePath <- "C:/Users/Tobyz/Desktop/Career/Data Analyst/"
transactionData <- read_excel(paste0(filePath,"QVI_transaction_data.xlsx"))
customerData <- fread(file=paste0(filePath,"QVI_purchase_behaviour.csv"))
str(transactionData)
#### Convert DATE column to a date format
#### A quick search online tells us that CSV and Excel integer dates begin on 30 Dec 1899
transactionData$DATE <- as.Date(transactionData$DATE, origin = "1899-12-30")
#### Examine PROD_NAME
factor(transactionData$PROD_NAME)
#### Examine the words in PROD_NAME to see if there are any incorrect entries
#### such as products that are not chips
productWords <- data.table(unlist(strsplit(unique(transactionData[, PROD_NAME]), " ")))
#### Examine the words in PROD_NAME to see if there are any incorrect entries
#### such as products that are not chips
productWords <- data.table(unlist(strsplit(unique(transactionData[, PROD_NAME]), " ")))
knitr::opts_chunk$set(echo = TRUE)
#### Examine PROD_NAME
PROD_NAME <- factor(transactionData$PROD_NAME)
#### Examine the words in PROD_NAME to see if there are any incorrect entries
#### such as products that are not chips
productWords <- data.table(unlist(strsplit(unique(transactionData[, PROD_NAME]), " ")))
knitr::opts_chunk$set(echo = TRUE)
#### Examine the words in PROD_NAME to see if there are any incorrect entries
#### such as products that are not chips
names(transactionData)
knitr::opts_chunk$set(echo = TRUE)
#### Examine the words in PROD_NAME to see if there are any incorrect entries
#### such as products that are not chips
head(transactionData)
#### Examine the words in PROD_NAME to see if there are any incorrect entries
#### such as products that are not chips
head(transactionData)
productWords <- data.table(unlist(strsplit(unique(transactionData[, PROD_NAME]), " ")))
knitr::opts_chunk$set(echo = TRUE)
#### Examine PROD_NAME
factor(transactionData$PROD_NAME)
#### Examine the words in PROD_NAME to see if there are any incorrect entries
#### such as products that are not chips
head(transactionData)
productWords <- data.table(unlist(strsplit(unique(transactionData[, PROD_NAME]), " ")))
knitr::opts_chunk$set(echo = TRUE)
#### Examine the words in PROD_NAME to see if there are any incorrect entries
#### such as products that are not chips
head(transactionData)
productWords <- data.table(unlist(strsplit(unique(transactionData[[“PROD_NAME”]]), " ")))
knitr::opts_chunk$set(echo = TRUE)
#### Examine the words in PROD_NAME to see if there are any incorrect entries
#### such as products that are not chips
head(transactionData)
productWords <- data.table(unlist(strsplit(unique(transactionData[["PROD_NAME"]]), " ")))
setnames(productWords, "chips")
productWords <- data.table(unlist(strsplit(unique(transactionData[["PROD_NAME"]]), " ")))
setnames(productWords, "chips")
View(productWords)
source("~/.active-rstudio-document", echo = TRUE)
#Data distribution
(cormorant_hist <- ggplot(data=cormorant)+
geom_histogram(aes(x=pop))+
labs(x='Value',
y='Density')+
plot_theme())
(cormorant_hist <- ggplot(data=cormorant)+
geom_histogram(aes(x=popbc))+
labs(x='Value',
y='Density')+
plot_theme())
(cormorant_bc_hist <- ggplot(data=cormorant)+
geom_histogram(aes(x=popbc))+
labs(x='Value',
y='Density')+
plot_theme())
#Data distribution
(cormorant_hist <- ggplot(data=cormorant)+
geom_histogram(aes(x=pop))+
labs(x='Value',
y='Density')+
plot_theme())
cormorant_bc_lm <- lm(popbc~year, data= cormorant)
plot(cormorant_bc_lm)
View(cormorant)
(cormorant_bc_lm)
cormorant.resid <- resid(cormorant_bc_lm)
shapiro.test(cormorant.resid)
bartlett.test(popbc~year, data=cormorant)
View(mod.summary)
# Plot the predictions
(stork_plot <- ggplot(stork.pred) +
geom_line(aes(x = x, y = predicted), color = '#db1818') +  # add the prediction line
geom_ribbon(aes(x = x, ymin = conf.low, ymax = conf.high),  # add the ribbon
fill = "#fc7777", alpha = 0.5) +
geom_point(data = stork,  # add the original data
aes(y = pop, x = year)) +
annotate("text", x = 1975, y = 180,  # annotate the plot with slope and CI info
label = paste0('Slope = ', as.character(slope),
'\nUpper CI = ', as.character(upper_ci),
'\nLower CI = ', as.character(lower_ci))) +
labs(x = '',
y = 'Population Abundance',
title = "Global white stork population increased between 1970-2008",
caption = 'Data Source: Living Planet Index') +
plot_theme()  +
xlim(c(1970, 2008))  # we set a limit to the x-axis to show only the relevant years
)
View(stork.pred)
(cormorant_bc_hist <- ggplot(data=cormorant)+
geom_histogram(aes(x=popbc))+
labs(x='Value',
y='Density')+
plot_theme())
View(cormorant)
#Standardization
(cormorant_density_loc <- cormorant%>%
ggplot(aes(x=pop))+
geom_density()+
facet_wrap(~id, scale='free')+
labs(y='Density',
x='\nValue\n',
title='Distributions of individual cormorant populations\n')+
plot_theme()+
theme(axis.text.x= element_blank(),
axis.text.y= element_blank()))
ggsave(plot=cormorant_density_loc,
filename="cormorant_hist_loc.png",
width=10, height=12, units='in')
#standardization
cormorant <- cormorant%>%
group_by(id)%>%
mutate(scalepop_standard=(pop-mean(pop))/(sd(pop)))%>%
ungroup()
cormorant_hist <- ggplot(data=cormorant)+
geom_histogram(aes(x=scalepop_standard),
alpha=0.9,
fill='#319450')+
labs(y='Density',
x='Value')+
plot_theme
cormorant_hist <- ggplot(data=cormorant)+
geom_histogram(aes(x=scalepop_standard),
alpha=0.9,
fill='#319450')+
labs(y='Density',
x='Value')+
plot_theme()
(cormorant_hist <- ggplot(data=cormorant)+
geom_histogram(aes(x=scalepop_standard),
alpha=0.9,
fill='#319450')+
labs(y='Density',
x='Value')+
plot_theme())
#model
cormorant_std_mod <- lm(scalepop_standard~year, data=cormorant)
summary(cormorant_std_mod)
cormorant.resid2 <- resid(cormorant_std_mod)
shapiro.test(cormorant.resid2)
bartlett.test(scalepop_standard~year, data=cormorant)
cormorant_pred <- ggpredict(cormorant_std_mod)
View(cormorant_pred)
View(cormorant_pred)
View(cormorant_pred)
View(cormorant_std_mod)
cormorant_pred
View(cormorant_pred)
View(cormorant_pred)
view(cormorant_pred)
#reverse transformation
cormorant_pred$predicted <- (cormorant_pred$predicted)*sd(cormorant$pop)+mean(cormorant$pop)
View(stork.pred)
cormorant_pred <- ggpredict(cormorant_std_mod, terms=c('year'))
view(cormorant_pred)
#reverse transformation
cormorant_pred$predicted <- (cormorant_pred$predicted)*sd(cormorant$pop)+mean(cormorant$pop)
cormorant_pred$conf.low <- (cormorant_pred$conf.low)*sd(cormorant$pop)+mean(cormorant$pop)
view(cormorant_pred)
cormorant_pred <- ggpredict(cormorant_std_mod, terms=c('year'))
view(cormorant_pred)
#reverse transformation
cormorant_pred$predicted <- (cormorant_pred$predicted)*sd(cormorant$pop)+mean(cormorant$pop)
cormorant_pred$conf.low <- (cormorant_pred$conf.low)*sd(cormorant$pop)+mean(cormorant$pop)
view(cormorant_pred)
